name: MacOS VoiceOver

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  start-voiceover-and-move-right:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [macos-15]
    steps:
      - uses: actions/checkout@v4
      - run: |
          # Disable splash screen
          defaults write com.apple.VoiceOverTraining doNotShowSplashScreen -bool true

          # Update VoiceOver Utility to allow VoiceOver to be controlled with AppleScript
          # by creating a special Accessibility DB file (SIP must be disabled) and
          # updating the user defaults system to reflect this change.
          if csrutil status | grep -Eq  "System Integrity Protection status: (disabled|unknown)"; then
              sudo bash -c 'echo -n "a" > /private/var/db/Accessibility/.VoiceOverAppleScriptEnabled'

              # Attempt to manually update VO Applescript settings
              echo "Attempting to manually update VO Utility settings..."
              /usr/bin/osascript voiceOverSettings.applescript

              sleep 1 

              echo "Attempting to read VO Utility settings..."
              defaults read ~/Library/Group\ Containers/group.com.apple.VoiceOver/Library/Preferences/com.apple.VoiceOver4/default.plist

              # New requirement for MacOS Sequoia replacing the `defaults write` below. Due to the plist being located in sandboxed location SIP or similar security controls need to be relaxed before unentitled apps/scripts can modify the value.
              # sudo plutil -replace SCREnableAppleScript -bool true ~/Library/Group\ Containers/group.com.apple.VoiceOver/Library/Preferences/com.apple.VoiceOver4/default.plist
          fi
          # defaults write com.apple.VoiceOver4/default SCREnableAppleScript -bool YES

          sleep 1

          # Start VoiceOver
          /System/Library/CoreServices/VoiceOver.app/Contents/MacOS/VoiceOverStarter &

          # See if VoiceOver process is running
          ps aux | egrep "[V]oiceOver"

          # See if AppleScript thinks VoiceOver is running
          /usr/bin/osascript voiceOverRunning.applescript
          
          sleep 1

          # Use AppleScript to "activate" VoiceOver
          until $(/usr/bin/osascript voiceOverActivate.applescript)
          do
            echo "VO not ready..."
            sleep 1
          done
          echo "VO ready."

          # Attempt to control VoiceOver using AppleScript
          until $(/usr/bin/osascript voiceOverPerform.applescript)
          do
            echo "Failed to perform AppleScript, retrying..."
            sleep 1
          done

          echo "Complete."

          # Terminate VoiceOver
          kill -15 $(ps aux | egrep "[V]oiceOver.app/Contents/MacOS/VoiceOver launchd -s" | awk '{print $2}')
